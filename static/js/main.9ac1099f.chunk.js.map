{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","renderTitle","length","slice","join","addGoods","good","setState","prevState","removeGoods","filter","selectedGood","resetGoods","this","className","type","onClick","disabled","map","key","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAqFaC,E,4MAjFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,WACZ,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAM,oBACR,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,2BACIJ,EAAcG,OAAO,GADzB,mB,EAKNE,SAAW,SAACC,GACV,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BR,cAAc,GAAD,mBAAMQ,EAAUR,eAAhB,CAA+BM,S,EAIhDG,YAAc,SAACH,GACb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BR,cAAeQ,EAAUR,cAAcU,QACrC,SAAAC,GAAY,OAAIA,IAAiBL,U,EAKvCM,WAAa,WACX,EAAKL,SAAS,CAAEP,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,yBAAKc,UAAU,OACb,wBAAIA,UAAU,cAAcD,KAAKZ,eAEjC,4BACEc,KAAK,SACLD,UAAU,eACVE,QAASH,KAAKD,WACdK,UAAWjB,EAAcE,QAJ3B,SASA,wBAAIY,UAAU,aACXjB,EAAgBqB,KAAI,SAAAZ,GAAI,OACvB,wBACEa,IAAKb,EACLQ,UAAS,oBAAed,EAAcoB,SAASd,GAC3C,WAAa,KAEjB,8BAAOA,GACP,4BACES,KAAK,SACLD,UAAW,oBACHd,EAAcoB,SAASd,GAAQ,SAAW,YAClDU,QAAS,kBACPhB,EAAcoB,SAASd,GACnB,EAAKG,YAAYH,GACjB,EAAKD,SAASC,KAGnBN,EAAcoB,SAASd,GACpB,SAAW,iB,GAxEbe,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9ac1099f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  renderTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return `No goods selected`;\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and\n          ${selectedGoods.slice(-1)} are selected`;\n    }\n  }\n\n  addGoods = (good) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGoods = (good) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(\n        selectedGood => selectedGood !== good,\n      ),\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">{this.renderTitle()}</h1>\n\n        <button\n          type=\"button\"\n          className=\"button reset\"\n          onClick={this.resetGoods}\n          disabled={!selectedGoods.length}\n        >\n          Reset\n        </button>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={`App__item ${selectedGoods.includes(good)\n                ? 'selected' : ''}`}\n            >\n              <span>{good}</span>\n              <button\n                type=\"button\"\n                className={'button'\n                  + ` ${selectedGoods.includes(good) ? 'active' : 'inactive'}`}\n                onClick={() => (\n                  selectedGoods.includes(good)\n                    ? this.removeGoods(good)\n                    : this.addGoods(good)\n                )}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}